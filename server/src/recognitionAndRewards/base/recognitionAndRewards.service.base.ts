/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RecognitionAndRewards as PrismaRecognitionAndRewards,
} from "@prisma/client";

export class RecognitionAndRewardsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecognitionAndRewardsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recognitionAndRewards.count(args);
  }

  async recognitionAndRewardsItems(
    args: Prisma.RecognitionAndRewardsFindManyArgs
  ): Promise<PrismaRecognitionAndRewards[]> {
    return this.prisma.recognitionAndRewards.findMany(args);
  }
  async recognitionAndRewards(
    args: Prisma.RecognitionAndRewardsFindUniqueArgs
  ): Promise<PrismaRecognitionAndRewards | null> {
    return this.prisma.recognitionAndRewards.findUnique(args);
  }
  async createRecognitionAndRewards(
    args: Prisma.RecognitionAndRewardsCreateArgs
  ): Promise<PrismaRecognitionAndRewards> {
    return this.prisma.recognitionAndRewards.create(args);
  }
  async updateRecognitionAndRewards(
    args: Prisma.RecognitionAndRewardsUpdateArgs
  ): Promise<PrismaRecognitionAndRewards> {
    return this.prisma.recognitionAndRewards.update(args);
  }
  async deleteRecognitionAndRewards(
    args: Prisma.RecognitionAndRewardsDeleteArgs
  ): Promise<PrismaRecognitionAndRewards> {
    return this.prisma.recognitionAndRewards.delete(args);
  }
}
